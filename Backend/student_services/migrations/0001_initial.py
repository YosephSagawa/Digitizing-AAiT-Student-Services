# Generated by Django 5.2 on 2025-04-10 10:08

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Dormitory",
            fields=[
                ("dormitory_id", models.AutoField(primary_key=True, serialize=False)),
                ("dormitory_name", models.CharField(max_length=50)),
                ("room_number", models.CharField(max_length=10)),
                ("capacity", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Instructor",
            fields=[
                ("instructor_id", models.AutoField(primary_key=True, serialize=False)),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                ("email", models.EmailField(max_length=100, unique=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="instructor_images/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RFIDTag",
            fields=[
                (
                    "rfid_tag_id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("issue_date", models.DateField(default=django.utils.timezone.now)),
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("inactive", "Inactive")],
                        default="active",
                        max_length=10,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Classes",
            fields=[
                ("class_id", models.AutoField(primary_key=True, serialize=False)),
                ("class_name", models.CharField(max_length=50)),
                ("schedule", models.CharField(max_length=100)),
                (
                    "instructor",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="student_services.instructor",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="instructor",
            name="rfid_tag",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="student_services.rfidtag",
            ),
        ),
        migrations.CreateModel(
            name="CafeteriaTransaction",
            fields=[
                ("transaction_id", models.AutoField(primary_key=True, serialize=False)),
                ("service_type", models.CharField(max_length=50)),
                (
                    "transaction_time",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("date", models.DateField(default=django.utils.timezone.now)),
                (
                    "rfid_tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="student_services.rfidtag",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AccessControl",
            fields=[
                ("access_id", models.AutoField(primary_key=True, serialize=False)),
                ("location", models.CharField(max_length=50)),
                (
                    "access_time",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("granted", "Granted"), ("denied", "Denied")],
                        default="granted",
                        max_length=10,
                    ),
                ),
                (
                    "rfid_tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="student_services.rfidtag",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                ("student_id", models.AutoField(primary_key=True, serialize=False)),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                ("email", models.EmailField(max_length=100, unique=True)),
                ("phone", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="student_images/"
                    ),
                ),
                (
                    "rfid_tag",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="student_services.rfidtag",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Attendance",
            fields=[
                ("attendance_id", models.AutoField(primary_key=True, serialize=False)),
                ("date", models.DateField(default=django.utils.timezone.now)),
                ("time_in", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("present", "Present"),
                            ("absent", "Absent"),
                            ("late", "Late"),
                        ],
                        default="present",
                        max_length=10,
                    ),
                ),
                (
                    "class_instance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="student_services.classes",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="student_services.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DormitoryAssignment",
            fields=[
                ("assignment_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "assignment_date",
                    models.DateField(default=django.utils.timezone.now),
                ),
                (
                    "dormitory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="student_services.dormitory",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="student_services.student",
                    ),
                ),
            ],
            options={
                "unique_together": {("student", "dormitory")},
            },
        ),
        migrations.CreateModel(
            name="ClassEnrollment",
            fields=[
                ("enrollment_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "class_instance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="student_services.classes",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="student_services.student",
                    ),
                ),
            ],
            options={
                "unique_together": {("student", "class_instance")},
            },
        ),
    ]
